heat_template_version: 2014-10-16

description: |
    Create a worker node and join an existing docker swarm

parameters:

    key_name:
        type: string
        label: Key Name
        description: Name of the server access key.

    docker_swarm_manager:
        type: string
        label: Swarm Manager
        description: Docker swarm manager.

    docker_swarm_token:
        type: string
        label: Swarm Token
        description: Token required to join an existing docker swarm.

resources:

    worker:
        type: OS::Nova::Server
        properties:
            name: { get_param: "OS::stack_name" }
            flavor: 1 GB General Purpose v1
            image: Ubuntu 16.04 LTS (Xenial Xerus) (PVHVM)
            networks:
                - network: 00000000-0000-0000-0000-000000000000 
                - network: 11111111-1111-1111-1111-111111111111
                - network: 1ef7069a-1b89-4df6-9b76-11ea4ce562db
            key_name: { get_param: key_name } 
            config_drive: true
            software_config_transport: POLL_TEMP_URL
            user_data_format: SOFTWARE_CONFIG
            metadata:
                rax-heat: { get_param: "OS::stack_id" }

    docker_bootstrap_config:
        type: OS::Heat::SoftwareConfig
        properties:
            inputs:
                - name: swarm_manager
                - name: swarm_token
            group: script
            config: |
                #!/bin/bash
                sudo apt-get -y install apt-transport-https ca-certificates curl
                sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
                sudo add-apt-repository -y "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
                sudo apt-get update
                sudo apt-get -y install docker-ce
                sudo docker swarm join --token $swarm_token $swarm_manager:2377

    docker_bootstrap_deployment:
        type: OS::Heat::SoftwareDeployment
        properties:
            signal_transport: TEMP_URL_SIGNAL
            config:
                get_resource: docker_bootstrap_config
            server:
                get_resource: worker
            input_values:
                swarm_manager: { get_param: docker_swarm_manager }
                swarm_token: { get_param: docker_swarm_token }
            actions:
                - CREATE

    docker_cleanup_config:
        type: OS::Heat::SoftwareConfig
        properties:
            group: script
            config: |
                #!/bin/bash
                sudo docker swarm leave

    docker_cleanup_deployment:
        type: OS::Heat::SoftwareDeployment
        properties:
            signal_transport: TEMP_URL_SIGNAL
            config:
                get_resource: docker_cleanup_config
            server:
                get_resource: worker
            actions:
                - DELETE

outputs:

    deployment_stdout:
        description: Software Deployment Stdout
        value:
            get_attr: [docker_bootstrap_deployment, deploy_stdout]

    deployment_stderr:
        description: Software Deployment Stderr
        value:
            get_attr: [docker_bootstrap_deployment, deploy_stderr]

    deployment_status_code:
        description: Software Deployment Status Code
        value:
            get_attr: [docker_bootstrap_deployment, deploy_status_code]
